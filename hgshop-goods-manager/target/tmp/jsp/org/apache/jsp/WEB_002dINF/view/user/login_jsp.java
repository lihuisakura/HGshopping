/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.20.v20190813
 * Generated at: 2020-04-14 05:30:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/E:/cms/repository/jstl/jstl/1.2/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("file:/E:/cms/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1579399875950L));
    _jspx_dependants.put("file:/E:/cms/repository/jstl/jstl/1.2/jstl-1.2.jar", Long.valueOf(1554776747206L));
    _jspx_dependants.put("jar:file:/E:/cms/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425949870000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("  <!-- Required meta tags -->\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("  <title>Login</title>\r\n");
      out.write("  <!-- plugins:css -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/resource/vendors/mdi/css/materialdesignicons.min.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/resource/vendors/base/vendor.bundle.base.css\">\r\n");
      out.write("  <!-- endinject -->\r\n");
      out.write("  <!-- plugin css for this page -->\r\n");
      out.write("  <!-- End plugin css for this page -->\r\n");
      out.write("  <!-- inject:css -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/resource/css/style.css\">\r\n");
      out.write("  <!-- endinject -->\r\n");
      out.write("  <link rel=\"shortcut icon\" href=\"/resource/images/favicon.png\" />\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"/resource/js/jquery-3.2.1.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/resource/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function login(){\r\n");
      out.write("\tvar username=$(\"[name=username]\").val();\r\n");
      out.write("\tvar password=$(\"[name=password]\").val();\r\n");
      out.write("\tif(null==username || username==\"\"){\r\n");
      out.write("\t\talert(\"请输入用户名\");\r\n");
      out.write("\t\treturn ;\r\n");
      out.write("\t}\r\n");
      out.write("\tif(null==password || password==\"\"){\r\n");
      out.write("\t\talert(\"请输入密码\");\r\n");
      out.write("\t\treturn ;\r\n");
      out.write("\t}\r\n");
      out.write("\t$.post(\"/login\",{username:username,password:password},function(re){\r\n");
      out.write("\t\tif(re){\r\n");
      out.write("\t\t\talert(\"登录成功！\");\r\n");
      out.write("\t\t\tlocation=\"/admin\";\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\talert(\"登录失败!\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  <div class=\"container-scroller\">\r\n");
      out.write("    <div class=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n");
      out.write("      <div class=\"content-wrapper d-flex align-items-center auth px-0\">\r\n");
      out.write("        <div class=\"row w-100 mx-0\">\r\n");
      out.write("          <div class=\"col-lg-4 mx-auto\">\r\n");
      out.write("            <div class=\"auth-form-light text-left py-5 px-4 px-sm-5\">\r\n");
      out.write("              <div  class=\"brand-logo\">\r\n");
      out.write("                <img src=\"/resource/images/hg01.jpg\" alt=\"logo\">\r\n");
      out.write("              </div>\r\n");
      out.write("              \r\n");
      out.write("              \t<h4 style=\"padding-left:30px\">欢迎进入  HG</h4>\r\n");
      out.write("              \r\n");
      out.write("              <form class=\"pt-3\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                  <input type=\"text\" name=\"username\" class=\"form-control form-control-lg\" id=\"exampleInputEmail1\" placeholder=\"用户名\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                  <input type=\"password\" name=\"password\" class=\"form-control form-control-lg\" id=\"exampleInputPassword1\" placeholder=\"密码\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"mt-3\">\r\n");
      out.write("                  <a class=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\" onclick=\"login()\" href=\"#\">登录</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"my-2 d-flex justify-content-between align-items-center\">\r\n");
      out.write("                  <div class=\"form-check\">\r\n");
      out.write("                    <label class=\"form-check-label text-muted\">\r\n");
      out.write("                      <input type=\"checkbox\" class=\"form-check-input\">\r\n");
      out.write("                      \t保持登录状态\r\n");
      out.write("                    </label>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <a href=\"#\" class=\"auth-link text-black\">忘记密码?</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                 <div class=\"text-center mt-4 font-weight-light\">\r\n");
      out.write("                  \t还没有账号? <a href=\"#\" class=\"text-primary\">创建</a>\r\n");
      out.write("                </div> \r\n");
      out.write("              </form>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <!-- content-wrapper ends -->\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- page-body-wrapper ends -->\r\n");
      out.write("  </div>\r\n");
      out.write("  <!-- container-scroller -->\r\n");
      out.write("  <!-- plugins:js -->\r\n");
      out.write("  <script src=\"/resource/vendors/base/vendor.bundle.base.js\"></script>\r\n");
      out.write("  <!-- endinject -->\r\n");
      out.write("  <!-- inject:js -->\r\n");
      out.write("  <script src=\"/resource/js/off-canvas.js\"></script>\r\n");
      out.write("  <script src=\"/resource/js/hoverable-collapse.js\"></script>\r\n");
      out.write("  <script src=\"/resource/js/template.js\"></script>\r\n");
      out.write("  <!-- endinject -->\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
